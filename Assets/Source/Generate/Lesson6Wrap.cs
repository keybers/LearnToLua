//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Lesson6Wrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Lesson6), typeof(System.Object));
		L.RegFunction("Calc", Calc);
		L.RegFunction("New", _CreateLesson6);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLesson6(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Lesson6 obj = new Lesson6();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Lesson6.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Calc(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				Lesson6 obj = (Lesson6)ToLua.CheckObject<Lesson6>(L, 1);
				int o = obj.Calc();
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<float>(L, 2))
			{
				Lesson6 obj = (Lesson6)ToLua.CheckObject<Lesson6>(L, 1);
				float arg0 = (float)LuaDLL.lua_tonumber(L, 2);
				float o = obj.Calc(arg0);
				LuaDLL.lua_pushnumber(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<string>(L, 2))
			{
				Lesson6 obj = (Lesson6)ToLua.CheckObject<Lesson6>(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				string o = obj.Calc(arg0);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<int>(L, 3))
			{
				Lesson6 obj = (Lesson6)ToLua.CheckObject<Lesson6>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				int o = obj.Calc(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<LuaInterface.LuaOut<int>>(L, 3))
			{
				Lesson6 obj = (Lesson6)ToLua.CheckObject<Lesson6>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				int arg1;
				int o = obj.Calc(arg0, out arg1);
				LuaDLL.lua_pushinteger(L, o);
				LuaDLL.lua_pushinteger(L, arg1);
				return 2;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Lesson6.Calc");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

