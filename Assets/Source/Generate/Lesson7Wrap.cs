//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Lesson7Wrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Lesson7), typeof(System.Object));
		L.RegFunction("DoUnityAction", DoUnityAction);
		L.RegFunction("DoEvent", DoEvent);
		L.RegFunction("ClearEvent", ClearEvent);
		L.RegFunction("New", _CreateLesson7);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("unityAction", get_unityAction, set_unityAction);
		L.RegVar("eventAction", get_eventAction, set_eventAction);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLesson7(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Lesson7 obj = new Lesson7();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Lesson7.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DoUnityAction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Lesson7 obj = (Lesson7)ToLua.CheckObject<Lesson7>(L, 1);
			obj.DoUnityAction();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DoEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Lesson7 obj = (Lesson7)ToLua.CheckObject<Lesson7>(L, 1);
			obj.DoEvent();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Lesson7 obj = (Lesson7)ToLua.CheckObject<Lesson7>(L, 1);
			obj.ClearEvent();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_unityAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Lesson7 obj = (Lesson7)o;
			UnityEngine.Events.UnityAction ret = obj.unityAction;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index unityAction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_eventAction(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(UnityEngine.Events.UnityAction)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_unityAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Lesson7 obj = (Lesson7)o;
			UnityEngine.Events.UnityAction arg0 = (UnityEngine.Events.UnityAction)ToLua.CheckDelegate<UnityEngine.Events.UnityAction>(L, 2);
			obj.unityAction = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index unityAction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_eventAction(IntPtr L)
	{
		try
		{
			Lesson7 obj = (Lesson7)ToLua.CheckObject(L, 1, typeof(Lesson7));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'Lesson7.eventAction' can only appear on the left hand side of += or -= when used outside of the type 'Lesson7'");
			}

			if (arg0.op == EventOp.Add)
			{
				UnityEngine.Events.UnityAction ev = (UnityEngine.Events.UnityAction)arg0.func;
				obj.eventAction += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				UnityEngine.Events.UnityAction ev = (UnityEngine.Events.UnityAction)arg0.func;
				obj.eventAction -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

